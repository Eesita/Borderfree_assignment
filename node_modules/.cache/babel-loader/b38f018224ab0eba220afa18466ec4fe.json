{"ast":null,"code":"import _slicedToArray from \"/Users/ashutoshjain/Downloads/0kb35/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ashutoshjain/Downloads/0kb35/src/components/Carousel.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from \"reactstrap\";\nimport { PropTypes } from \"prop-types\";\nimport \"./Carousel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Example = function Example(props) {\n  _s();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeIndex = _useState2[0],\n      setActiveIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      animating = _useState4[0],\n      setAnimating = _useState4[1];\n\n  var next = function next() {\n    if (animating) return;\n    var nextIndex = activeIndex === props.images.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  var previous = function previous() {\n    if (animating) return;\n    var nextIndex = activeIndex === 0 ? props.images.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  var goToIndex = function goToIndex(newIndex) {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  var slides = props.images.map(function (item) {\n    return /*#__PURE__*/_jsxDEV(CarouselItem, {\n      onExiting: function onExiting() {\n        return setAnimating(true);\n      },\n      onExited: function onExited() {\n        return setAnimating(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item,\n        alt: item.altText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CarouselCaption, {\n        captionText: item.caption // captionHeader={item.caption}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)]\n    }, item.src, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(Carousel, {\n    activeIndex: activeIndex,\n    next: next,\n    previous: previous,\n    children: [/*#__PURE__*/_jsxDEV(CarouselIndicators, {\n      items: props.images,\n      activeIndex: activeIndex,\n      onClickHandler: goToIndex // className=\"carouselIndicators\"\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this), slides, /*#__PURE__*/_jsxDEV(CarouselControl, {\n      direction: \"prev\",\n      directionText: \"Previous\",\n      onClickHandler: previous,\n      className: \"carouselControl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CarouselControl, {\n      direction: \"next\",\n      directionText: \"Next\",\n      onClickHandler: next,\n      className: \"carouselControl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Example, \"FYd3Lqf74+dQScd+D3/2SfzV0cE=\");\n\n_c = Example;\nexport default Example;\nCarousel.propTypes = {\n  // the current active slide of the carousel\n  activeIndex: PropTypes.number,\n  // a function which should advance the carousel to the next slide (via activeIndex)\n  next: PropTypes.func.isRequired,\n  // a function which should advance the carousel to the previous slide (via activeIndex)\n  previous: PropTypes.func.isRequired,\n  // controls if the left and right arrow keys should control the carousel\n  keyboard: PropTypes.bool,\n\n  /* If set to \"hover\", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on\r\n   * mouseleave. If set to false, hovering over the carousel won't pause it. (default: \"hover\")\r\n   */\n  pause: PropTypes.oneOf([\"hover\", false]),\n  // Autoplays the carousel after the user manually cycles the first item. If \"carousel\", autoplays the carousel on load.\n  // This is how bootstrap defines it... I would prefer a bool named autoplay or something...\n  ride: PropTypes.oneOf([\"carousel\"]),\n  // the interval at which the carousel automatically cycles (default: 5000)\n  // If set to false, carousel will not Autoplay (i.e. will not automatically cycle).\n  interval: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.bool]),\n  children: PropTypes.array,\n  // called when the mouse enters the Carousel\n  mouseEnter: PropTypes.func,\n  // called when the mouse exits the Carousel\n  mouseLeave: PropTypes.func,\n  // controls whether the slide animation on the Carousel works or not\n  slide: PropTypes.bool,\n  cssModule: PropTypes.object,\n  // controls whether the touch gestures on the Carousel works or not (default: true)\n  enableTouch: PropTypes.bool\n};\nCarouselControl.propTypes = {\n  direction: PropTypes.oneOf([\"prev\", \"next\"]).isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  cssModule: PropTypes.object,\n  directionText: PropTypes.string\n};\nCarouselIndicators.propTypes = {\n  items: PropTypes.array.isRequired,\n  activeIndex: PropTypes.number.isRequired,\n  cssModule: PropTypes.object,\n  onClickHandler: PropTypes.func.isRequired\n};\nCarouselCaption.propTypes = {\n  captionHeader: PropTypes.node,\n  captionText: PropTypes.node.isRequired,\n  cssModule: PropTypes.object\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["/Users/ashutoshjain/Downloads/0kb35/src/components/Carousel.js"],"names":["React","useState","Carousel","CarouselItem","CarouselControl","CarouselIndicators","CarouselCaption","PropTypes","Example","props","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","images","length","previous","goToIndex","newIndex","slides","map","item","altText","caption","src","propTypes","number","func","isRequired","keyboard","bool","pause","oneOf","ride","interval","oneOfType","string","children","array","mouseEnter","mouseLeave","slide","cssModule","object","enableTouch","direction","onClickHandler","directionText","items","captionHeader","node","captionText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption\r\n} from \"reactstrap\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport \"./Carousel.css\";\r\n\r\nconst Example = (props) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex =\r\n      activeIndex === props.images.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex =\r\n      activeIndex === 0 ? props.images.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  const slides = props.images.map((item) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item.src}\r\n      >\r\n        <img src={item} alt={item.altText} />\r\n        <CarouselCaption\r\n          captionText={item.caption}\r\n          // captionHeader={item.caption}\r\n        />\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Carousel activeIndex={activeIndex} next={next} previous={previous}>\r\n      <CarouselIndicators\r\n        items={props.images}\r\n        activeIndex={activeIndex}\r\n        onClickHandler={goToIndex}\r\n        // className=\"carouselIndicators\"\r\n      />\r\n      {slides}\r\n      <CarouselControl\r\n        direction=\"prev\"\r\n        directionText=\"Previous\"\r\n        onClickHandler={previous}\r\n        className=\"carouselControl\"\r\n      />\r\n      <CarouselControl\r\n        direction=\"next\"\r\n        directionText=\"Next\"\r\n        onClickHandler={next}\r\n        className=\"carouselControl\"\r\n      />\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n\r\nCarousel.propTypes = {\r\n  // the current active slide of the carousel\r\n  activeIndex: PropTypes.number,\r\n  // a function which should advance the carousel to the next slide (via activeIndex)\r\n  next: PropTypes.func.isRequired,\r\n  // a function which should advance the carousel to the previous slide (via activeIndex)\r\n  previous: PropTypes.func.isRequired,\r\n  // controls if the left and right arrow keys should control the carousel\r\n  keyboard: PropTypes.bool,\r\n  /* If set to \"hover\", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on\r\n   * mouseleave. If set to false, hovering over the carousel won't pause it. (default: \"hover\")\r\n   */\r\n  pause: PropTypes.oneOf([\"hover\", false]),\r\n  // Autoplays the carousel after the user manually cycles the first item. If \"carousel\", autoplays the carousel on load.\r\n  // This is how bootstrap defines it... I would prefer a bool named autoplay or something...\r\n  ride: PropTypes.oneOf([\"carousel\"]),\r\n  // the interval at which the carousel automatically cycles (default: 5000)\r\n  // If set to false, carousel will not Autoplay (i.e. will not automatically cycle).\r\n  interval: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.string,\r\n    PropTypes.bool\r\n  ]),\r\n  children: PropTypes.array,\r\n  // called when the mouse enters the Carousel\r\n  mouseEnter: PropTypes.func,\r\n  // called when the mouse exits the Carousel\r\n  mouseLeave: PropTypes.func,\r\n  // controls whether the slide animation on the Carousel works or not\r\n  slide: PropTypes.bool,\r\n  cssModule: PropTypes.object,\r\n  // controls whether the touch gestures on the Carousel works or not (default: true)\r\n  enableTouch: PropTypes.bool\r\n};\r\n\r\nCarouselControl.propTypes = {\r\n  direction: PropTypes.oneOf([\"prev\", \"next\"]).isRequired,\r\n  onClickHandler: PropTypes.func.isRequired,\r\n  cssModule: PropTypes.object,\r\n  directionText: PropTypes.string\r\n};\r\n\r\nCarouselIndicators.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  activeIndex: PropTypes.number.isRequired,\r\n  cssModule: PropTypes.object,\r\n  onClickHandler: PropTypes.func.isRequired\r\n};\r\n\r\nCarouselCaption.propTypes = {\r\n  captionHeader: PropTypes.node,\r\n  captionText: PropTypes.node.isRequired,\r\n  cssModule: PropTypes.object\r\n};\r\n"]},"metadata":{},"sourceType":"module"}