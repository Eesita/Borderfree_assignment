{"ast":null,"code":"import * as AWS from \"aws-sdk\"; // import dotenv from \"dotenv\";\n// dotenv.config();\n// AWS.config.update({\n//   region: \"ap-south-1\",\n//   endpoint: \"https://dynamodb.ap-south-1.amazonaws.com\",\n//   secretAccessKey: \"process.env.SECRET_ACCESS_KEY\",\n//   accessKeyId: \"process.env.ACCESS_KEY_ID\"\n// });\n\nAWS.config.update({\n  region: \"ap-south-1\",\n  endpoint: \"https://dynamodb.ap-south-1.amazonaws.com\",\n  secretAccessKey: \"1jS/vibbOT/zyysvgCCdniCEGwNPp8eiXwbnAKmG\",\n  accessKeyId: \"AKIASQE3RQQGR7VW2XOB\"\n});\nvar docClient = new AWS.DynamoDB.DocumentClient();\n\nvar fetchData = function fetchData(tableName) {\n  var params = {\n    TableName: tableName\n  };\n  return new Promise(function (resolve, reject) {\n    docClient.scan(params, function (err, data) {\n      if (err) {\n        console.log(\"Error\", err);\n        reject(err);\n      } else {\n        console.log(\"Successss - fetchData\", data.Items);\n        resolve(data.Items);\n      }\n    });\n  });\n};\n\nexport var putData = function putData(tableName, data) {\n  var params = {\n    TableName: tableName,\n    Item: data\n  };\n  docClient.put(params, function (err, data) {\n    if (err) {// console.log(\"Error - putData\", err);\n    } else {// console.log(\"Success - putData\", data);\n    }\n  });\n};\nexport var deleteData = function deleteData(tableName, id) {\n  // console.log(tableName, \"tableName - awsfunctions\");\n  // console.log(id, \"id - awsfunctions\");\n  var params = {\n    TableName: tableName,\n    Key: {\n      id: id\n    }\n  };\n  return new Promise(function (resolve, reject) {\n    docClient.delete(params, function (error) {\n      if (error) {\n        console.log(error);\n        return reject(\"Could not delete user\");\n      }\n\n      return resolve(\"ok\");\n    });\n  });\n};\nexport { fetchData };","map":{"version":3,"sources":["/Users/ashutoshjain/Downloads/0kb35/src/components/AWSFunctions.js"],"names":["AWS","config","update","region","endpoint","secretAccessKey","accessKeyId","docClient","DynamoDB","DocumentClient","fetchData","tableName","params","TableName","Promise","resolve","reject","scan","err","data","console","log","Items","putData","Item","put","deleteData","id","Key","delete","error"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,SAArB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAG,CAACC,MAAJ,CAAWC,MAAX,CAAkB;AAChBC,EAAAA,MAAM,EAAE,YADQ;AAEhBC,EAAAA,QAAQ,EAAE,2CAFM;AAGhBC,EAAAA,eAAe,EAAE,0CAHD;AAIhBC,EAAAA,WAAW,EAAE;AAJG,CAAlB;AAOA,IAAMC,SAAS,GAAG,IAAIP,GAAG,CAACQ,QAAJ,CAAaC,cAAjB,EAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,SAAD,EAAe;AAC/B,MAAIC,MAAM,GAAG;AACXC,IAAAA,SAAS,EAAEF;AADA,GAAb;AAIA,SAAO,IAAIG,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CT,IAAAA,SAAS,CAACU,IAAV,CAAeL,MAAf,EAAuB,UAAUM,GAAV,EAAeC,IAAf,EAAqB;AAC1C,UAAID,GAAJ,EAAS;AACPE,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,GAArB;AACAF,QAAAA,MAAM,CAACE,GAAD,CAAN;AACD,OAHD,MAGO;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,IAAI,CAACG,KAA1C;AACAP,QAAAA,OAAO,CAACI,IAAI,CAACG,KAAN,CAAP;AACD;AACF,KARD;AASD,GAVM,CAAP;AAWD,CAhBD;;AAkBA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACZ,SAAD,EAAYQ,IAAZ,EAAqB;AAC1C,MAAIP,MAAM,GAAG;AACXC,IAAAA,SAAS,EAAEF,SADA;AAEXa,IAAAA,IAAI,EAAEL;AAFK,GAAb;AAKAZ,EAAAA,SAAS,CAACkB,GAAV,CAAcb,MAAd,EAAsB,UAAUM,GAAV,EAAeC,IAAf,EAAqB;AACzC,QAAID,GAAJ,EAAS,CACP;AACD,KAFD,MAEO,CACL;AACD;AACF,GAND;AAOD,CAbM;AAeP,OAAO,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACf,SAAD,EAAYgB,EAAZ,EAAmB;AAC3C;AACA;AAEA,MAAMf,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAEF,SADE;AAEbiB,IAAAA,GAAG,EAAE;AACHD,MAAAA,EAAE,EAAEA;AADD;AAFQ,GAAf;AAOA,SAAO,IAAIb,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CT,IAAAA,SAAS,CAACsB,MAAV,CAAiBjB,MAAjB,EAAyB,UAACkB,KAAD,EAAW;AAClC,UAAIA,KAAJ,EAAW;AACTV,QAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,eAAOd,MAAM,CAAC,uBAAD,CAAb;AACD;;AACD,aAAOD,OAAO,CAAC,IAAD,CAAd;AACD,KAND;AAOD,GARM,CAAP;AASD,CApBM;AAsBP,SAASL,SAAT","sourcesContent":["import * as AWS from \"aws-sdk\";\r\n\r\n// import dotenv from \"dotenv\";\r\n// dotenv.config();\r\n\r\n// AWS.config.update({\r\n//   region: \"ap-south-1\",\r\n//   endpoint: \"https://dynamodb.ap-south-1.amazonaws.com\",\r\n//   secretAccessKey: \"process.env.SECRET_ACCESS_KEY\",\r\n//   accessKeyId: \"process.env.ACCESS_KEY_ID\"\r\n// });\r\n\r\nAWS.config.update({\r\n  region: \"ap-south-1\",\r\n  endpoint: \"https://dynamodb.ap-south-1.amazonaws.com\",\r\n  secretAccessKey: \"1jS/vibbOT/zyysvgCCdniCEGwNPp8eiXwbnAKmG\",\r\n  accessKeyId: \"AKIASQE3RQQGR7VW2XOB\"\r\n});\r\n\r\nconst docClient = new AWS.DynamoDB.DocumentClient();\r\n\r\nconst fetchData = (tableName) => {\r\n  var params = {\r\n    TableName: tableName\r\n  };\r\n\r\n  return new Promise(function (resolve, reject) {\r\n    docClient.scan(params, function (err, data) {\r\n      if (err) {\r\n        console.log(\"Error\", err);\r\n        reject(err);\r\n      } else {\r\n        console.log(\"Successss - fetchData\", data.Items);\r\n        resolve(data.Items);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const putData = (tableName, data) => {\r\n  var params = {\r\n    TableName: tableName,\r\n    Item: data\r\n  };\r\n\r\n  docClient.put(params, function (err, data) {\r\n    if (err) {\r\n      // console.log(\"Error - putData\", err);\r\n    } else {\r\n      // console.log(\"Success - putData\", data);\r\n    }\r\n  });\r\n};\r\n\r\nexport const deleteData = (tableName, id) => {\r\n  // console.log(tableName, \"tableName - awsfunctions\");\r\n  // console.log(id, \"id - awsfunctions\");\r\n\r\n  const params = {\r\n    TableName: tableName,\r\n    Key: {\r\n      id: id\r\n    }\r\n  };\r\n\r\n  return new Promise(function (resolve, reject) {\r\n    docClient.delete(params, (error) => {\r\n      if (error) {\r\n        console.log(error);\r\n        return reject(\"Could not delete user\");\r\n      }\r\n      return resolve(\"ok\");\r\n    });\r\n  });\r\n};\r\n\r\nexport { fetchData };\r\n"]},"metadata":{},"sourceType":"module"}